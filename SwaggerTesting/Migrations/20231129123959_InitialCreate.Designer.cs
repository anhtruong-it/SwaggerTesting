// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SwaggerTesting.Context;

#nullable disable

namespace SwaggerTesting.Migrations
{
    [DbContext(typeof(PokemonAppDbContext))]
    [Migration("20231129123959_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SwaggerTesting.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Electric"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Water"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Leaf"
                        });
                });

            modelBuilder.Entity("SwaggerTesting.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Kanto"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Saffron City"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Millet Town"
                        });
                });

            modelBuilder.Entity("SwaggerTesting.Models.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Gym")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            FirstName = "Jack",
                            Gym = "Brocks Gym",
                            LastName = "Lodon"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 2,
                            FirstName = "Harry",
                            Gym = "Mistys Gym",
                            LastName = "Potter"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 3,
                            FirstName = "Ash",
                            Gym = "Ashs Gym",
                            LastName = "Ketchum"
                        });
                });

            modelBuilder.Entity("SwaggerTesting.Models.Pokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Pokemon");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1903, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Pikachu"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(2000, 10, 7, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Squirle"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1986, 3, 6, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "PVenasaur"
                        });
                });

            modelBuilder.Entity("SwaggerTesting.Models.PokemonCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<int>("PokemonId")
                        .HasColumnType("integer");

                    b.HasKey("CategoryId", "PokemonId");

                    b.HasIndex("PokemonId");

                    b.ToTable("PokemonCategories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            PokemonId = 1
                        },
                        new
                        {
                            CategoryId = 2,
                            PokemonId = 2
                        },
                        new
                        {
                            CategoryId = 3,
                            PokemonId = 3
                        });
                });

            modelBuilder.Entity("SwaggerTesting.Models.PokemonOwner", b =>
                {
                    b.Property<int>("OwnerId")
                        .HasColumnType("integer");

                    b.Property<int>("PokemonId")
                        .HasColumnType("integer");

                    b.HasKey("OwnerId", "PokemonId");

                    b.HasIndex("PokemonId");

                    b.ToTable("PokemonOwners");

                    b.HasData(
                        new
                        {
                            OwnerId = 1,
                            PokemonId = 1
                        },
                        new
                        {
                            OwnerId = 2,
                            PokemonId = 2
                        },
                        new
                        {
                            OwnerId = 3,
                            PokemonId = 3
                        });
                });

            modelBuilder.Entity("SwaggerTesting.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PokemonId")
                        .HasColumnType("integer");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.Property<int>("ReviewerId")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PokemonId");

                    b.HasIndex("ReviewerId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PokemonId = 1,
                            Rating = 5,
                            ReviewerId = 1,
                            Text = "Pikachu is the best pokemon, because it is electric",
                            Title = "Pikachu Review"
                        },
                        new
                        {
                            Id = 2,
                            PokemonId = 2,
                            Rating = 5,
                            ReviewerId = 2,
                            Text = "Squirtle is great",
                            Title = "Squirtle Review"
                        },
                        new
                        {
                            Id = 3,
                            PokemonId = 3,
                            Rating = 5,
                            ReviewerId = 3,
                            Text = "Venasaur is strong",
                            Title = "Venasaur Review"
                        });
                });

            modelBuilder.Entity("SwaggerTesting.Models.Reviewer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Reviewers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Teddy",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Taylor",
                            LastName = "Jones"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Jessica",
                            LastName = "McGregor"
                        });
                });

            modelBuilder.Entity("SwaggerTesting.Models.Owner", b =>
                {
                    b.HasOne("SwaggerTesting.Models.Country", "Country")
                        .WithMany("Owners")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("SwaggerTesting.Models.PokemonCategory", b =>
                {
                    b.HasOne("SwaggerTesting.Models.Pokemon", "Pokemon")
                        .WithMany("PokemonCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SwaggerTesting.Models.Category", "Category")
                        .WithMany("PokemonCategories")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("SwaggerTesting.Models.PokemonOwner", b =>
                {
                    b.HasOne("SwaggerTesting.Models.Owner", "Owner")
                        .WithMany("PokemonOwners")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SwaggerTesting.Models.Pokemon", "Pokemon")
                        .WithMany("PokemonOwners")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("SwaggerTesting.Models.Review", b =>
                {
                    b.HasOne("SwaggerTesting.Models.Pokemon", "Pokemon")
                        .WithMany("Reviews")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SwaggerTesting.Models.Reviewer", "Reviewer")
                        .WithMany("Reviews")
                        .HasForeignKey("ReviewerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pokemon");

                    b.Navigation("Reviewer");
                });

            modelBuilder.Entity("SwaggerTesting.Models.Category", b =>
                {
                    b.Navigation("PokemonCategories");
                });

            modelBuilder.Entity("SwaggerTesting.Models.Country", b =>
                {
                    b.Navigation("Owners");
                });

            modelBuilder.Entity("SwaggerTesting.Models.Owner", b =>
                {
                    b.Navigation("PokemonOwners");
                });

            modelBuilder.Entity("SwaggerTesting.Models.Pokemon", b =>
                {
                    b.Navigation("PokemonCategories");

                    b.Navigation("PokemonOwners");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("SwaggerTesting.Models.Reviewer", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
